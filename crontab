
# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
#
# Testing ===================================================
#
# run ansible playbook every minute while logged in as gns3 user for testing
# be sure to add spaces after each of the 5 leading wildcard variables
# Ubuntu does not default MTA (mail transfer agent) to suppress MTA errors use syntax below after playbook command
# if command does not execute grep 'wagarcmd' /var/log/syslog
#
# additional troubleshooting
# ensure cron service is running and view logs
# systemctl status cron
# current error = (CRON) info (No MTA installed, discarding output)
# as of 1-19-24 resolution unknown and further investigation required
#
* * * * * ansible-playbook -i /home/labuser/module1/Scripts/inventory.yaml /home/labuser/module1/Scripts/pb_backup.yaml >/dev/null 2>&1 | logger -t wagarcmd
#
# end Testing =====================================================
# run ansible playbook every sunday at 00:00 hours
#0 0 * * 0 ansible-playbook -i /home/labuser/module1/Scripts/inventory.yaml /home/labuser/module1/Scripts/pb_backup.yaml

